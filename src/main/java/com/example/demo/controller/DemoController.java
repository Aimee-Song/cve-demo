package com.example.demo.controller;

/*import com.example.demo.gen.model.Entity;*/
import com.example.demo.util.CsvUtil;
import com.example.demo.util.ExcelReader;
import com.example.demo.vo.CsvVO;
import com.example.demo.vo.ExcelDataVO;
import lombok.extern.slf4j.Slf4j;
import org.beetl.core.Configuration;
import org.beetl.core.GroupTemplate;
import org.beetl.core.Template;
import org.beetl.core.resource.FileResourceLoader;
import org.beetl.core.resource.StringTemplateResourceLoader;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;

@Controller
@Slf4j
public class DemoController {
    @GetMapping("/")
    public String index(HttpServletRequest request) throws IOException {
        // 设定Excel文件所在路径
        String excelFileName = "C://Users/songyue/Desktop/ini/test.xlsx";
        // 读取Excel文件内容
        List<ExcelDataVO> readResult = ExcelReader.readExcel(excelFileName);
        request.setAttribute("data", readResult.get(0));
        handleHtml(readResult.get(0));
        return "demo.html";
    }

    @GetMapping("/test")
    @ResponseBody
    public void test() throws IOException {
        StringTemplateResourceLoader resourceLoader = new StringTemplateResourceLoader();
        Configuration cfg = Configuration.defaultConfiguration();
        GroupTemplate gt = new GroupTemplate(resourceLoader, cfg);
        //获取模板
        Template t = gt.getTemplate("hello,${name}");
        t.binding("name", "beetl");
        //渲染结果
        String str = t.render();
        System.out.println(str);
    }

    @GetMapping("/test2")
    @ResponseBody
    public void test2() throws IOException {

        CsvUtil csvUtil = new CsvUtil();
        File file = new File("E://BaiduNetdiskDownload//test1.csv");
        // 将csv文件内容转成bean
        List<CsvVO> csvData = csvUtil.getCsvData(file, CsvVO.class);


        String root = System.getProperty("user.dir")+File.separator+"\\src\\main\\resources\\templates";
        FileResourceLoader resourceLoader = new FileResourceLoader(root,"utf-8");
        Configuration cfg = Configuration.defaultConfiguration();
        GroupTemplate gt = new GroupTemplate(resourceLoader, cfg);
        Template t = gt.getTemplate("/demo.html");
        t.binding("data", csvData.get(0));
        String str = t.render();
        FileWriter writer;
        try {
            writer = new FileWriter("E:/cve/"+csvData.get(0).getName()+".html");
            writer.write(str);
            writer.flush();
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    @GetMapping("/test3")
    @ResponseBody
    public void test3() throws IOException {
        String excelFileName = "E://BaiduNetdiskDownload//all.xlsx";
        // 读取Excel文件内容
        List<ExcelDataVO> readResult = ExcelReader.readExcel(excelFileName);
        System.out.println(readResult.size());
        for(ExcelDataVO vo : readResult) {
            System.out.println(vo.getName());
            handleHtml(vo);
        }
    }

    private void handleHtml(ExcelDataVO readResult) throws IOException {
        String root = System.getProperty("user.dir")+File.separator+"\\src\\main\\resources\\templates";
        FileResourceLoader resourceLoader = new FileResourceLoader(root,"utf-8");
        Configuration cfg = Configuration.defaultConfiguration();
        GroupTemplate gt = new GroupTemplate(resourceLoader, cfg);
        Template t = gt.getTemplate("/demo.html");
        t.binding("data", readResult);
        String str = t.render();
        FileWriter writer;
        try {
            writer = new FileWriter("D:/cve_tmp/"+readResult.getName()+".html");
            writer.write(str);
            writer.flush();
            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
